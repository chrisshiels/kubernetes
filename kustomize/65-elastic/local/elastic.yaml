# See:
# https://www.elastic.co/guide/en/cloud-on-k8s/master/k8s-users-and-roles.html
#
# host$ mkdir filerealm
# host$ touch filerealm/users filerealm/users_roles
#
# host$ sudo docker run \
#         --rm \
#         -v $(pwd)/filerealm:/usr/share/elasticsearch/config:Z \
#         docker.elastic.co/elasticsearch/elasticsearch:7.12.0 \
#         bin/elasticsearch-users useradd fluentd -p fluentd -r fluentd
#
# host$ cat filerealm/users
# fluentd:$2a$10$2dG4X0ouS.GkrAhz5muWLefVv8xbLc12HIKCPdgMZr.803hup0Eke
# host$ cat filerealm/users_roles
# fluentd:fluentd

---
apiVersion: v1
kind: Secret
metadata:
  name: usersandroles
stringData:
  users: |-
    fluentd:$2a$10$2dG4X0ouS.GkrAhz5muWLefVv8xbLc12HIKCPdgMZr.803hup0Eke
  users_roles: |-
    fluentd:fluentd

---
apiVersion: v1
kind: Secret
metadata:
  name: roles
stringData:
  roles.yml: |-
    fluentd:
      cluster:
      - 'monitor'
      indices:
      - names:
        - 'logstash-*'
        privileges:
        - 'create'
        - 'create_index'
        - 'delete'
        - 'write'

---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elastic
spec:
  version: 7.12.0
  auth:
    fileRealm:
    - secretName: usersandroles
    roles:
    - secretName: roles
  nodeSets:
  - name: default
    count: 3
    config:
      node.store.allow_mmap: false
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
        storageClassName: local-path

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: elasticsearch
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
spec:
  rules:
  - host: elastic.local
    http:
      paths:
      - backend:
          service:
            name: elastic-es-http
            port:
              name: https
        path: /
        pathType: ImplementationSpecific

---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: elastic
spec:
  version: 7.12.0
  count: 3
  elasticsearchRef:
    name: elastic

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kibana
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
spec:
  rules:
  - host: kibana.local
    http:
      paths:
      - backend:
          service:
            name: elastic-kb-http
            port:
              name: https
        path: /
        pathType: ImplementationSpecific
